{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmirintanen/IntroDS_Project/frontend/src/Components/Choices.tsx\",\n    _s = $RefreshSig$();\n\n// src/Components/Choices.tsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport AnimeCardMain from \"./AnimeCardMain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || \"\";\n\nconst Choices = _ref => {\n  _s();\n\n  let {\n    getRecommendations\n  } = _ref;\n  const [genres, setGenres] = useState(\"Action\");\n  const [compareAnime, setCompareAnime] = useState(\"\");\n  const [likeAnime, setLikeAnime] = useState(undefined);\n\n  const findAnime = async (animeTitle, event) => {\n    event.preventDefault();\n\n    try {\n      const url = API_BASE ? `${API_BASE}/anime` : \"/anime\"; // send JSON to backend (the refactored Flask /anime accepts both)\n\n      const res = await axios.post(url, {\n        search: animeTitle\n      }); // backend returns a single anime object in our unified shape\n\n      setLikeAnime(res.data);\n    } catch (e) {\n      console.error(\"Failed to fetch anime:\", e);\n      setLikeAnime(undefined);\n    }\n  };\n\n  const genreChoices = [{\n    label: \"Action\"\n  }, {\n    label: \"Comedy\"\n  }, {\n    label: \"Romance\"\n  }, {\n    label: \"Sports\"\n  }, {\n    label: \"Slice of Life\"\n  }, {\n    label: \"Sci-fi\"\n  }, {\n    label: \"Drama\"\n  }, {\n    label: \"Music\"\n  }, {\n    label: \"Fantasy\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mx-4 mt-5 mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter any Anime/Manga you like, e.g. Steins;Gate\",\n        className: \"p-2 w-full border-solid border-2 border-indigo-600 rounded\",\n        value: compareAnime,\n        onChange: e => setCompareAnime(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), compareAnime !== \"\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => findAnime(compareAnime, e),\n        className: \"p-1 w-full bg-violet-300 rounded hover:opacity-80 mt-2\",\n        children: \"Find anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: likeAnime && /*#__PURE__*/_jsxDEV(AnimeCardMain // AnimeCardMain wants AnimeCardData (BackendAnime + col)\n      , {\n        id: likeAnime.id,\n        title: likeAnime.title,\n        description: likeAnime.description,\n        averageScore: likeAnime.averageScore,\n        coverImage: likeAnime.coverImage,\n        siteUrl: likeAnime.siteUrl,\n        col: \"bg-slate-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), likeAnime && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"cursor-pointer p-2 rounded mx-4 mt-1 bg-red-200 text-center hover:opacity-80\",\n        name: \"genre-setter\",\n        value: genres,\n        onChange: e => setGenres(e.target.value),\n        children: genreChoices.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.label,\n          children: option.label\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getRecommendations(genres, likeAnime.description),\n        className: \"recommend-me\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-4 mb-1 p-2 rounded basis-1/2 bg-yellow-300 hover:opacity-70\",\n          children: \"Recommend me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Choices, \"jQWebvGt85E540vAjD3ahDniTOY=\");\n\n_c = Choices;\nexport default Choices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Choices\");","map":{"version":3,"names":["React","useState","axios","AnimeCardMain","API_BASE","process","env","REACT_APP_API_BASE","Choices","getRecommendations","genres","setGenres","compareAnime","setCompareAnime","likeAnime","setLikeAnime","undefined","findAnime","animeTitle","event","preventDefault","url","res","post","search","data","e","console","error","genreChoices","label","target","value","id","title","description","averageScore","coverImage","siteUrl","map","option"],"sources":["/Users/vilhelmirintanen/IntroDS_Project/frontend/src/Components/Choices.tsx"],"sourcesContent":["// src/Components/Choices.tsx\nimport React, { useState } from \"react\"\nimport axios from \"axios\"\nimport AnimeCardMain from \"./AnimeCardMain\"\nimport { BackendAnime, GenreOption, ChoicesProps } from \"../types\"\n\nconst API_BASE = process.env.REACT_APP_API_BASE || \"\"\n\nconst Choices: React.FC<ChoicesProps> = ({ getRecommendations }) => {\n  const [genres, setGenres] = useState<string>(\"Action\")\n  const [compareAnime, setCompareAnime] = useState<string>(\"\")\n  const [likeAnime, setLikeAnime] = useState<BackendAnime | undefined>(undefined)\n\n  const findAnime = async (\n    animeTitle: string,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault()\n\n    try {\n      const url = API_BASE ? `${API_BASE}/anime` : \"/anime\"\n\n      // send JSON to backend (the refactored Flask /anime accepts both)\n      const res = await axios.post(url, { search: animeTitle })\n\n      // backend returns a single anime object in our unified shape\n      setLikeAnime(res.data)\n    } catch (e) {\n      console.error(\"Failed to fetch anime:\", e)\n      setLikeAnime(undefined)\n    }\n  }\n\n  const genreChoices: GenreOption[] = [\n    { label: \"Action\" },\n    { label: \"Comedy\" },\n    { label: \"Romance\" },\n    { label: \"Sports\" },\n    { label: \"Slice of Life\" },\n    { label: \"Sci-fi\" },\n    { label: \"Drama\" },\n    { label: \"Music\" },\n    { label: \"Fantasy\" },\n  ]\n\n  return (\n    <>\n      {/* search form */}\n      <form className=\"mx-4 mt-5 mb-1\">\n        <input\n          placeholder=\"Enter any Anime/Manga you like, e.g. Steins;Gate\"\n          className=\"p-2 w-full border-solid border-2 border-indigo-600 rounded\"\n          value={compareAnime}\n          onChange={(e) => setCompareAnime(e.target.value)}\n          type=\"text\"\n        />\n\n        {compareAnime !== \"\" && (\n          <button\n            onClick={(e) => findAnime(compareAnime, e)}\n            className=\"p-1 w-full bg-violet-300 rounded hover:opacity-80 mt-2\"\n          >\n            Find anime\n          </button>\n        )}\n      </form>\n\n      {/* show the anime we found */}\n      <div className=\"flex justify-center\">\n        {likeAnime && (\n          <AnimeCardMain\n            // AnimeCardMain wants AnimeCardData (BackendAnime + col)\n            id={likeAnime.id}\n            title={likeAnime.title}\n            description={likeAnime.description}\n            averageScore={likeAnime.averageScore}\n            coverImage={likeAnime.coverImage}\n            siteUrl={likeAnime.siteUrl}\n            col=\"bg-slate-200\"\n          />\n        )}\n      </div>\n\n      {/* genre + recommend */}\n      {likeAnime && (\n        <>\n          <select\n            className=\"cursor-pointer p-2 rounded mx-4 mt-1 bg-red-200 text-center hover:opacity-80\"\n            name=\"genre-setter\"\n            value={genres}\n            onChange={(e) => setGenres(e.target.value)}\n          >\n            {genreChoices.map((option) => (\n              <option key={option.label} value={option.label}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          <button\n            onClick={() => getRecommendations(genres, likeAnime.description)}\n            className=\"recommend-me\"\n          >\n            <div className=\"mx-4 mb-1 p-2 rounded basis-1/2 bg-yellow-300 hover:opacity-70\">\n              Recommend me!\n            </div>\n          </button>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Choices\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}