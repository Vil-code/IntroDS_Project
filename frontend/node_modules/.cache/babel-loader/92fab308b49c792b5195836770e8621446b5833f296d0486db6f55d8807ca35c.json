{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmirintanen/IntroDS_Project/frontend/src/Components/Choices.tsx\",\n  _s = $RefreshSig$();\n// src/Components/Choices.tsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport AnimeCardMain from \"./AnimeCardMain\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || \"\";\nconst genreChoices = [{\n  label: \"Action\"\n}, {\n  label: \"Comedy\"\n}, {\n  label: \"Romance\"\n}, {\n  label: \"Sports\"\n}, {\n  label: \"Slice of Life\"\n}, {\n  label: \"Sci-fi\"\n}, {\n  label: \"Drama\"\n}, {\n  label: \"Music\"\n}, {\n  label: \"Fantasy\"\n}];\nconst sortChoices = [{\n  label: \"Score (high → low)\",\n  value: \"SCORE_DESC\"\n}, {\n  label: \"Popularity\",\n  value: \"POPULARITY_DESC\"\n}, {\n  label: \"Trending\",\n  value: \"TRENDING_DESC\"\n}, {\n  label: \"Favourites\",\n  value: \"FAVOURITES_DESC\"\n}];\nconst Choices = ({\n  getRecommendations\n}) => {\n  _s();\n  const [genres, setGenres] = useState(\"Action\");\n  const [sort, setSort] = useState(\"SCORE_DESC\");\n  const [compareAnime, setCompareAnime] = useState(\"\");\n  const [likeAnime, setLikeAnime] = useState(undefined);\n  const [loadingAnime, setLoadingAnime] = useState(false);\n  const findAnime = async (animeTitle, event) => {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    if (!animeTitle.trim()) return;\n    try {\n      setLoadingAnime(true);\n      const url = API_BASE ? `${API_BASE}/anime` : \"/anime\";\n      const res = await axios.post(url, {\n        search: animeTitle\n      });\n      setLikeAnime(res.data);\n    } catch (e) {\n      console.error(\"Failed to fetch anime:\", e);\n      setLikeAnime(undefined);\n    } finally {\n      setLoadingAnime(false);\n    }\n  };\n  const handleRecommend = () => {\n    var _likeAnime$descriptio;\n    const desc = (_likeAnime$descriptio = likeAnime === null || likeAnime === void 0 ? void 0 : likeAnime.description) !== null && _likeAnime$descriptio !== void 0 ? _likeAnime$descriptio : \"\";\n    // ⬇️ send sort to parent\n    getRecommendations(genres, desc, sort);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mx-4 mt-5 mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter any Anime/Manga you like, e.g. Steins;Gate\",\n        className: \"p-2 w-full border-solid border-2 border-indigo-600 rounded\",\n        value: compareAnime,\n        onChange: e => setCompareAnime(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), compareAnime !== \"\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => findAnime(compareAnime, e),\n        className: \"p-1 w-full bg-violet-300 rounded hover:opacity-80 mt-2\",\n        disabled: loadingAnime,\n        children: loadingAnime ? \"Finding...\" : \"Find anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-4 flex flex-col gap-2 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"cursor-pointer p-2 w-full rounded bg-red-200 text-center hover:opacity-80\",\n        name: \"genre-setter\",\n        value: genres,\n        onChange: e => setGenres(e.target.value),\n        children: genreChoices.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.label,\n          children: option.label\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"cursor-pointer p-2 w-full rounded bg-sky-200 text-center hover:opacity-80\",\n        name: \"sort-setter\",\n        value: sort,\n        onChange: e => setSort(e.target.value),\n        children: sortChoices.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRecommend,\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 rounded bg-yellow-300 hover:opacity-70 text-center\",\n          children: \"Recommend me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center bg-gray mt-3\",\n      children: likeAnime && /*#__PURE__*/_jsxDEV(AnimeCardMain, {\n        id: likeAnime.id,\n        title: likeAnime.title,\n        description: likeAnime.description,\n        averageScore: likeAnime.averageScore,\n        coverImage: likeAnime.coverImage,\n        siteUrl: likeAnime.siteUrl,\n        genres: likeAnime.genres,\n        col: \"bg-slate-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Choices, \"qUwyiJs0CJOZq35puoP5gbRpxYg=\");\n_c = Choices;\nexport default Choices;\nvar _c;\n$RefreshReg$(_c, \"Choices\");","map":{"version":3,"names":["React","useState","axios","AnimeCardMain","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","genreChoices","label","sortChoices","value","Choices","getRecommendations","_s","genres","setGenres","sort","setSort","compareAnime","setCompareAnime","likeAnime","setLikeAnime","undefined","loadingAnime","setLoadingAnime","findAnime","animeTitle","event","preventDefault","trim","url","res","post","search","data","e","console","error","handleRecommend","_likeAnime$descriptio","desc","description","children","className","placeholder","onChange","target","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","name","map","option","id","title","averageScore","coverImage","siteUrl","col","_c","$RefreshReg$"],"sources":["/Users/vilhelmirintanen/IntroDS_Project/frontend/src/Components/Choices.tsx"],"sourcesContent":["// src/Components/Choices.tsx\nimport React, { useState } from \"react\"\nimport axios from \"axios\"\nimport AnimeCardMain from \"./AnimeCardMain\"\nimport { BackendAnime, GenreOption, ChoicesProps } from \"../types\"\n\nconst API_BASE = process.env.REACT_APP_API_BASE || \"\"\n\nconst genreChoices: GenreOption[] = [\n  { label: \"Action\" },\n  { label: \"Comedy\" },\n  { label: \"Romance\" },\n  { label: \"Sports\" },\n  { label: \"Slice of Life\" },\n  { label: \"Sci-fi\" },\n  { label: \"Drama\" },\n  { label: \"Music\" },\n  { label: \"Fantasy\" },\n]\n\nconst sortChoices = [\n  { label: \"Score (high → low)\", value: \"SCORE_DESC\" },\n  { label: \"Popularity\", value: \"POPULARITY_DESC\" },\n  { label: \"Trending\", value: \"TRENDING_DESC\" },\n  { label: \"Favourites\", value: \"FAVOURITES_DESC\" },\n]\n\nconst Choices: React.FC<ChoicesProps> = ({ getRecommendations }) => {\n  const [genres, setGenres] = useState<string>(\"Action\")\n  const [sort, setSort] = useState<string>(\"SCORE_DESC\")\n  const [compareAnime, setCompareAnime] = useState<string>(\"\")\n  const [likeAnime, setLikeAnime] = useState<BackendAnime | undefined>(undefined)\n  const [loadingAnime, setLoadingAnime] = useState(false)\n\n  const findAnime = async (\n    animeTitle: string,\n    event?: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event?.preventDefault()\n    if (!animeTitle.trim()) return\n    try {\n      setLoadingAnime(true)\n      const url = API_BASE ? `${API_BASE}/anime` : \"/anime\"\n      const res = await axios.post(url, { search: animeTitle })\n      setLikeAnime(res.data)\n    } catch (e) {\n      console.error(\"Failed to fetch anime:\", e)\n      setLikeAnime(undefined)\n    } finally {\n      setLoadingAnime(false)\n    }\n  }\n\n  const handleRecommend = () => {\n    const desc = likeAnime?.description ?? \"\"\n    // ⬇️ send sort to parent\n    getRecommendations(genres, desc, sort as any)\n  }\n\n  return (\n    <>\n      {/* search */}\n      <form className=\"mx-4 mt-5 mb-1\">\n        <input\n          placeholder=\"Enter any Anime/Manga you like, e.g. Steins;Gate\"\n          className=\"p-2 w-full border-solid border-2 border-indigo-600 rounded\"\n          value={compareAnime}\n          onChange={(e) => setCompareAnime(e.target.value)}\n          type=\"text\"\n        />\n\n        {compareAnime !== \"\" && (\n          <button\n            onClick={(e) => findAnime(compareAnime, e)}\n            className=\"p-1 w-full bg-violet-300 rounded hover:opacity-80 mt-2\"\n            disabled={loadingAnime}\n          >\n            {loadingAnime ? \"Finding...\" : \"Find anime\"}\n          </button>\n        )}\n      </form>\n\n      {/* genre + sort + recommend */}\n      <div className=\"mx-4 flex flex-col gap-2 mb-2\">\n        <select\n          className=\"cursor-pointer p-2 w-full rounded bg-red-200 text-center hover:opacity-80\"\n          name=\"genre-setter\"\n          value={genres}\n          onChange={(e) => setGenres(e.target.value)}\n        >\n          {genreChoices.map((option) => (\n            <option key={option.label} value={option.label}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n\n        {/* new: order select */}\n        <select\n          className=\"cursor-pointer p-2 w-full rounded bg-sky-200 text-center hover:opacity-80\"\n          name=\"sort-setter\"\n          value={sort}\n          onChange={(e) => setSort(e.target.value)}\n        >\n          {sortChoices.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n\n        <button onClick={handleRecommend} className=\"w-full\">\n          <div className=\"p-2 rounded bg-yellow-300 hover:opacity-70 text-center\">\n            Recommend me!\n          </div>\n        </button>\n      </div>\n\n      {/* preview */}\n      <div className=\"flex justify-center bg-gray mt-3\">\n        {likeAnime && (\n          <AnimeCardMain\n            id={likeAnime.id}\n            title={likeAnime.title}\n            description={likeAnime.description}\n            averageScore={likeAnime.averageScore}\n            coverImage={likeAnime.coverImage}\n            siteUrl={likeAnime.siteUrl}\n            genres={likeAnime.genres}\n            col=\"bg-slate-200\"\n          />\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Choices\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}