{"ast":null,"code":"var _jsxFileName = \"/Users/vilhelmirintanen/IntroDS_Project/frontend/src/Components/AnimeCard.tsx\";\n// src/Components/AnimeCard.tsx\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AnimeCard = ({\n  title,\n  averageScore,\n  coverImage,\n  col,\n  siteUrl,\n  description,\n  id\n}) => {\n  var _title$romaji, _coverImage$large;\n  // backend guarantees { title: { romaji: string } }, but be defensive:\n  const titleText = typeof title === \"string\" ? title : (_title$romaji = title === null || title === void 0 ? void 0 : title.romaji) !== null && _title$romaji !== void 0 ? _title$romaji : \"Untitled\";\n\n  // backend sends { coverImage: { large: string } }, but be defensive:\n  const imageSrc = typeof coverImage === \"string\" ? coverImage : (_coverImage$large = coverImage === null || coverImage === void 0 ? void 0 : coverImage.large) !== null && _coverImage$large !== void 0 ? _coverImage$large : null;\n\n  // short description for tooltip / alt\n  const shortDesc = (description === null || description === void 0 ? void 0 : description.length) > 120 ? description.slice(0, 117) + \"...\" : description !== null && description !== void 0 ? description : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"opacity-100 hover:opacity-80 h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: siteUrl !== null && siteUrl !== void 0 ? siteUrl : \"#\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      className: \"block h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(\"flex flex-col text-center h-full rounded shadow-sm\", col),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"truncate font-medium\",\n            title: titleText,\n            children: titleText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: [\"Score: \", averageScore !== null && averageScore !== void 0 ? averageScore : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-full object-cover rounded-b-lg max-h-64\",\n          src: imageSrc,\n          alt: shortDesc || titleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-40 flex items-center justify-center bg-white/30 rounded-b-lg text-xs\",\n          children: \"No image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = AnimeCard;\nvar _c;\n$RefreshReg$(_c, \"AnimeCard\");","map":{"version":3,"names":["React","classNames","jsxDEV","_jsxDEV","AnimeCard","title","averageScore","coverImage","col","siteUrl","description","id","_title$romaji","_coverImage$large","titleText","romaji","imageSrc","large","shortDesc","length","slice","className","children","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/vilhelmirintanen/IntroDS_Project/frontend/src/Components/AnimeCard.tsx"],"sourcesContent":["// src/Components/AnimeCard.tsx\nimport React from \"react\"\nimport classNames from \"classnames\"\nimport { AnimeCardData } from \"../types\"\n\ntype Props = AnimeCardData\n\nexport const AnimeCard: React.FC<Props> = ({\n  title,\n  averageScore,\n  coverImage,\n  col,\n  siteUrl,\n  description,\n  id,\n}) => {\n  // backend guarantees { title: { romaji: string } }, but be defensive:\n  const titleText =\n    typeof title === \"string\" ? title : title?.romaji ?? \"Untitled\"\n\n  // backend sends { coverImage: { large: string } }, but be defensive:\n  const imageSrc =\n    typeof coverImage === \"string\"\n      ? coverImage\n      : coverImage?.large ?? null\n\n  // short description for tooltip / alt\n  const shortDesc =\n    description?.length > 120\n      ? description.slice(0, 117) + \"...\"\n      : description ?? \"\"\n\n  return (\n    <div className=\"opacity-100 hover:opacity-80 h-full\">\n      <a\n        href={siteUrl ?? \"#\"}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"block h-full\"\n      >\n        <div\n          className={classNames(\n            \"flex flex-col text-center h-full rounded shadow-sm\",\n            col\n          )}\n        >\n          <div className=\"p-2\">\n            <div className=\"truncate font-medium\" title={titleText}>\n              {titleText}\n            </div>\n            <div className=\"text-sm\">Score: {averageScore ?? 0}</div>\n          </div>\n\n          {imageSrc ? (\n            <img\n              className=\"w-full object-cover rounded-b-lg max-h-64\"\n              src={imageSrc}\n              alt={shortDesc || titleText}\n            />\n          ) : (\n            <div className=\"h-40 flex items-center justify-center bg-white/30 rounded-b-lg text-xs\">\n              No image\n            </div>\n          )}\n        </div>\n      </a>\n    </div>\n  )\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKnC,OAAO,MAAMC,SAA0B,GAAGA,CAAC;EACzCC,KAAK;EACLC,YAAY;EACZC,UAAU;EACVC,GAAG;EACHC,OAAO;EACPC,WAAW;EACXC;AACF,CAAC,KAAK;EAAA,IAAAC,aAAA,EAAAC,iBAAA;EACJ;EACA,MAAMC,SAAS,GACb,OAAOT,KAAK,KAAK,QAAQ,GAAGA,KAAK,IAAAO,aAAA,GAAGP,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,MAAM,cAAAH,aAAA,cAAAA,aAAA,GAAI,UAAU;;EAEjE;EACA,MAAMI,QAAQ,GACZ,OAAOT,UAAU,KAAK,QAAQ,GAC1BA,UAAU,IAAAM,iBAAA,GACVN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEU,KAAK,cAAAJ,iBAAA,cAAAA,iBAAA,GAAI,IAAI;;EAE/B;EACA,MAAMK,SAAS,GACb,CAAAR,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,MAAM,IAAG,GAAG,GACrBT,WAAW,CAACU,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GACjCV,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,EAAE;EAEvB,oBACEP,OAAA;IAAKkB,SAAS,EAAC,qCAAqC;IAAAC,QAAA,eAClDnB,OAAA;MACEoB,IAAI,EAAEd,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,GAAI;MACrBe,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC,YAAY;MAChBJ,SAAS,EAAC,cAAc;MAAAC,QAAA,eAExBnB,OAAA;QACEkB,SAAS,EAAEpB,UAAU,CACnB,oDAAoD,EACpDO,GACF,CAAE;QAAAc,QAAA,gBAEFnB,OAAA;UAAKkB,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAClBnB,OAAA;YAAKkB,SAAS,EAAC,sBAAsB;YAAChB,KAAK,EAAES,SAAU;YAAAQ,QAAA,EACpDR;UAAS;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACN1B,OAAA;YAAKkB,SAAS,EAAC,SAAS;YAAAC,QAAA,GAAC,SAAO,EAAChB,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,CAAC;UAAA;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,EAELb,QAAQ,gBACPb,OAAA;UACEkB,SAAS,EAAC,2CAA2C;UACrDS,GAAG,EAAEd,QAAS;UACde,GAAG,EAAEb,SAAS,IAAIJ;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,gBAEF1B,OAAA;UAAKkB,SAAS,EAAC,wEAAwE;UAAAC,QAAA,EAAC;QAExF;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAG,EAAA,GA7DY5B,SAA0B;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}